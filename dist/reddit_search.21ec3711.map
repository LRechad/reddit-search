{"version":3,"sources":["reddit-api.js","index.js"],"names":["search","searchTerm","sortBy","searchLimit","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","querySelector","searchInput","showMessage","message","className","div","createElement","searchContainer","appendChild","createTextNode","insertBefore","setTimeout","remove","truncateText","text","limit","shortened","indexOf","substring","addEventListener","value","reddit","output","forEach","image","post","preview","images","source","url","title","selftext","subreddit","score","innerHTML","e","preventDefault"],"mappings":"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","file":"reddit_search.21ec3711.map","sourceRoot":"..","sourcesContent":["const search = (searchTerm, sortBy, searchLimit) => {\n    return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\n        .then(res => res.json())\n        .then(data => data.data.children.map(data => data.data))\n        .catch(err => console.log(err));\n}\n\nexport default {\n    search\n};","import reddit from './reddit-api';\n\nconst searchForm = document.querySelector('#search-form');\nconst searchInput = document.querySelector('#search-input');\n\nconst showMessage = (message, className) => {\n    const div = document.createElement('div');\n    const searchContainer = document.querySelector('#search-container');\n    const search = document.querySelector('#search');\n\n    div.className = `alert ${className}`;\n    div.appendChild(document.createTextNode(message));\n\n    searchContainer.insertBefore(div, search);\n\n    // set a timeout\n    setTimeout(() => document.querySelector('.alert').remove(), 3000);\n}\n\nconst truncateText = (text, limit) => {\n    const shortened = text.indexOf(' ', limit);\n    if (shortened === -1) return text;\n    return text.substring(0, shortened);\n}\n\n// Form event listener\nsearchForm.addEventListener('submit', e => {\n    const searchTerm = searchInput.value;\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n    const searchLimit = document.querySelector('#limit').value;\n\n    if (searchTerm === '') {\n        showMessage('Please add a search term', 'alert-danger');\n    }\n\n    // searchInput.value = ''; // Clear input after a search\n    reddit.search(searchTerm, sortBy, searchLimit)\n        .then(res => {\n            let output = '<div class=\"card-columns\">';\n            res.forEach(post => {\n                // Check for image\n                let image = post.preview ? post.preview.images[0].source.url : 'http://media.gizmodo.co.uk/wp-content/uploads/2016/11/ytzaorwdu0e7byvs7zmn.jpg';\n\n                output += `\n                <div class=\"card\">\n                <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">${post.title}</h5>\n                  <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\n                  <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read more</a>\n                  <hr>\n                  <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\n                  <span class=\"badge badge-dark\">Score :${post.score} </span>\n                  </div>\n                </div>\n                `;\n            });\n            output += '</div>';\n            document.querySelector('#results').innerHTML = output;\n        });\n\n    e.preventDefault();\n});"]}